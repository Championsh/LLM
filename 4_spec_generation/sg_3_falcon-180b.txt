public virtual int BinarySearch(int index, int count, Object value, IComparer comparer)
{
    // Check if input parameters are valid
    if (index < 0 || index >= this._size)
    {
        throw new ArgumentOutOfRangeException("index", "Index must be between 0 and Size - 1");
    }

    if (count <= 0)
    {
        throw new ArgumentOutOfRangeException("count", "Count must be greater than zero");
    }

    if (value == null)
    {
        throw new ArgumentNullException("value");
    }

    if (comparer == null)
    {
        throw new ArgumentNullException("comparer");
    }

    // Use existing binary search function to find the index of the element
    int result = BinarySearch(value, comparer);

    // If element was not found in sorted portion of array, check unsorted portion
    if (result < 0)
    {
        for (int i = index + count - 1; i >= index; i--)
        {
            if (comparer.Compare(this[i], value) == 0)
            {
                result = i;
                break;
            }
        }
    }

    return result;
}
