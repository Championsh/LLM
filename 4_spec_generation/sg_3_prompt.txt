Imagine you are a programmer creating static code analysis tool.
Generate function with prototype int getpeername(int sockfd, struct sockaddr *addr, socklen_t *addrlen), relying on an existing function int getsockname(int sockfd, struct sockaddr *addr, socklen_t *addrlen):

int getsockname(int sockfd, struct sockaddr *addr, socklen_t *addrlen) {
  sf_bitinit(addr);
	sf_must_not_be_release(sockfd);
    sf_set_must_be_positive(sockfd);
    sf_lib_arg_type(sockfd, "SocketCategory");

	int res;
    sf_overwrite(&res);
	sf_set_possible_negative(res);
	
    return res;
}

Consider to generate a lightweight code, i.e. we need only general function behaviour without assignment, loops, cycles.
Make sure to use auxiliary functions from existing function.
