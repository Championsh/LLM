Вот спецификация для функции SysAllocString:

// Функция SysAllocString
BSTR SysAllocString(const OLECHAR* psz) {
    BSTR ptr = nullptr;

    // Проверяем, была ли выполнена функция _ZSt9terminatev. Если нет, вызываем ее и возвращаем nullptr.
    if (!sf_is_finished()) {
        _ZSt9terminatev();
        return nullptr;
    }

    // Выделяем память для строки Unicode.
    ptr = new OLECHAR[strlen(psz) + 1];

    // Копируем строку Unicode в выделенную память.
    strcpy(ptr, psz);

    // Возвращаем указатель на выделенную память.
    return ptr;
}



Эта функция использует функцию _ZSt9terminatev для обработки исключений во время выполнения. Если функция _ZSt9terminatev не вызывалась ранее, она вызывается перед возвратом nullptr. Это гарантирует, что любые существующие исключения будут обработаны.

Функция _ZSt9terminatev вызывает функцию sf_terminate_path(), которая освобождает все ресурсы, связанные с процессом, и завершает процесс.

Функция make_exception_ptr создает новый экземпляр std::exception_ptr из указанного объекта исключения. Эта функция не доступна в стандартной библиотеке C++.

Функция current_exception() возвращает текущий объект исключения, связанный с потоком выполнения. Эта функция также не доступна в стандартной библиотеке C++.
